# Generated by Django 5.0 on 2025-02-09 20:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('words', '0002_word_level_wordantonym_wordetymology_wordexample_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserCategory',
            fields=[
                ('id', models.BigIntegerField(db_comment='Unix timestamp ID for the model', editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Unix Timestamp ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('category', models.CharField(max_length=255, verbose_name='Category')),
                ('is_public', models.BooleanField(verbose_name='Is public')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Category',
                'verbose_name_plural': 'User Categories',
                'db_table': 'words_user_category',
            },
        ),
        migrations.CreateModel(
            name='UserTag',
            fields=[
                ('id', models.BigIntegerField(db_comment='Unix timestamp ID for the model', editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Unix Timestamp ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('tag', models.CharField(max_length=255, verbose_name='Tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Tag',
                'verbose_name_plural': 'User Tags',
                'db_table': 'words_user_tag',
            },
        ),
        migrations.CreateModel(
            name='WordCategory',
            fields=[
                ('id', models.BigIntegerField(db_comment='Unix timestamp ID for the model', editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Unix Timestamp ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='word_categories', to='words.usercategory', verbose_name='User category')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='words.word', verbose_name='Word')),
            ],
            options={
                'verbose_name': 'Word Category',
                'verbose_name_plural': 'Word Categories',
                'db_table': 'words_word_category',
            },
        ),
        migrations.CreateModel(
            name='WordTag',
            fields=[
                ('id', models.BigIntegerField(db_comment='Unix timestamp ID for the model', editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Unix Timestamp ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='word_tags', to='words.usertag', verbose_name='User tag')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='words.word', verbose_name='Word')),
            ],
            options={
                'verbose_name': 'Word Tag',
                'verbose_name_plural': 'Word Tags',
                'db_table': 'words_word_tag',
            },
        ),
    ]
